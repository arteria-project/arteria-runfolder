#!/usr/bin/env python

# Creates a few runfolders for manual testing.
# The endpoint mode must have can_create_runfolders enabled.
import sys
import requests
import jsonpickle
import time

base_url = sys.argv[1] if len(sys.argv) > 1 else "http://localhost:10800"

print base_url, sys.argv

api_help = "{}/api".format(base_url)


def supports_method(endpoint, method):
    # Uses the autogenerated doc to establish if a url/method is provided.
    # This could be ported to a base client.
    response = requests.get(api_help)
    result = jsonpickle.decode(response.text)
    try:
        [route for route in result["doc"] if route["route"] == endpoint][0]["methods"][method]
        return True
    except KeyError:
        return False

def get_settings():
    endpoint = "{}/api/1.0/admin/settings".format(base_url)
    resp = requests.get(endpoint)
    if resp.status_code == 200:
        return jsonpickle.decode(resp.text)

def get_monitored_directories():
    settings = get_settings()
    return settings["monitored_directories"]


def can_create_runfolder():
    settings = get_settings()
    return settings["can_create_runfolder"]


if can_create_runfolder():
    print "can_create_runfolder is enabled on the server"
    timestamp = int(time.time())
    monitored = get_monitored_directories()[0]
    path = "{}/runfolder_{}".format(monitored, timestamp)
    endpoint = "{}/api/1.0/runfolders/path{}".format(base_url, path)
    print "PUT {}".format(endpoint)
    resp = requests.put(endpoint)
    print "Status: {}".format(resp.status_code)

    endpoint = "{}/api/1.0/runfolders/test/markasready/path{}".format(base_url, path)
    print "PUT {}".format(endpoint)
    resp = requests.put(endpoint)
    print "Status: {}".format(resp.status_code)

else:
    print "can_create_runfolder is not enabled on the server"
    sys.exit(1)

